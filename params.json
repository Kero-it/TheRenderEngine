{"name":"Therenderengine","tagline":"The Render Engine is a cross-browser, open source game engine written entirely in JavaScript. Designed from the ground up to be extremely flexible, it boasts an extensive API and uses the newest features of today's modern browsers.","body":"The Render Engine\r\n=================\r\n\r\nThe Render Engine is a cross-browser, open source game engine written entirely in JavaScript. Designed from the\r\nground up to be extremely flexible, it boasts an extensive API and uses the newest features of today's modern browsers.\r\nThe Render Engine is a framework which is intended to aid in developing your game idea by providing the foundation\r\nand tools to speed up the process of going from idea to finished product.\r\n\r\nThe Render Engine supports:\r\n   * Chrome\r\n   * Firefox\r\n   * Internet Explorer 9.0+\r\n   * Opera\r\n   * Safari\r\n\r\nConcept\r\n-------\r\nWhen creating games, it is often quite easy to reimplement the same code over-and-over.  You need to do things with\r\nkeyboard or mouse input, or you have to render your character to the screen, you might also want to know when two\r\nobjects collide.  Instead of rewriting this code (or god forbid, copying it) The Render Engine is based on the idea\r\nof components.\r\n\r\nEach component is intended to perform a discreet task.  These tasks fall into one of the five types of operations:\r\n\r\n   1. Input\r\n   2. Transform (movement)\r\n   3. Logic\r\n   4. Collision\r\n   5. Rendering\r\n\r\nThese operations execute from the top down for each game object.  First an object processes its inputs, then moves,\r\nnext it performs any logic, the next step is to check collisions, then it renders.  Each game object can have as many\r\nof *each type* of component within it.  The components can be assigned a priority, with a higher priority executing\r\nbefore a lower priority.  This way, each game object can delegate a majority of its operation to these reusble\r\ncomponents which frees you up to work on the game-specific implementation of your game object.\r\n\r\nHow Do I Use This Thing?\r\n------------------------\r\nUnderstand that what you have here is known as a \"game engine\".  Just like in a car, you can design a fancy body,\r\namazing interior, outfit it with chrome 22's, etc.  But until you put an engine in it and wire everything up, that\r\ncar is just a concept.  The Render Engine provides you with this \"engine\" to make your game run.  It also contains\r\nmany objects which will take care of doing the most mundane things so that you can focus on your game, not the\r\nfundamentals.\r\n\r\nTutorials & Demos\r\n-----------------\r\nThe included tutorials and demos are provided to help you understand the framework and how everything works together.\r\nEach tutorial is intended to either build upon a previous tutorial, or provide an introduction to an engine feature.\r\nThe demos are meant to be more complete examples of different concepts working together to form a game.\r\n\r\n\r\n(c)2008-2013 Brett Fattori (bfattori@gmail.com)\r\nMIT Licensed\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}